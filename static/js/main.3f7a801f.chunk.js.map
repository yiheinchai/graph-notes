{"version":3,"sources":["components/ListText.module.css","components/ui/buttons/AddButton.js","components/ListText.js","components/FileUploader.js","App.js","index.js","components/ui/buttons/AddButton.module.css"],"names":["module","exports","AddButton","props","className","styles","button","onClick","onClickHandler","previous","getTextStyles","textHierarchy","isLargeHeader","ListText","useState","expandable","showContent","setShowContent","text","trim","length","container","viewBox","points","mindMapMode","style","display","flexFlow","children","FileUploader","type","name","onChange","event","submitHandler","target","files","extractTextNodes","currentElement","Array","from","childNodes","reduce","textString","node","nodeType","Node","TEXT_NODE","nodeValue","App","setMindMapMode","file","setFile","fileData","setFileData","fileJSON","setFileJSON","elementHierarchy","h1","h2","h3","p","elements","document","querySelector","querySelectorAll","output","current","index","array","localName","insertChildren","textContent","hierarchyLevel","currentHierarchy","marginLeft","insertSibilingInLatestAndDeepestDepths","replace","insertSibilingAtSpecifiedDepth","insertChildInLatestAndDeepestDepths","object","data","depth","push","fileReader","FileReader","onload","e","result","readAsText","processFile","objectExtractor","map","child","id","dangerouslySetInnerHTML","__html","ReactDOM","render"],"mappings":"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","file":"static/js/main.3f7a801f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ListText_container__2oWhs\",\"text__wrapper_mindmap\":\"ListText_text__wrapper_mindmap__1jwpV\",\"text__wrapper_document\":\"ListText_text__wrapper_document__1_Sf9\",\"text__card_mindmap\":\"ListText_text__card_mindmap__1nML6\",\"text__card_document\":\"ListText_text__card_document__2lf4s\",\"text_mindmap\":\"ListText_text_mindmap__2x8bl\",\"text_document\":\"ListText_text_document__3pbA-\",\"text_expandable\":\"ListText_text_expandable__1nZxg\",\"text__hierarchy_1\":\"ListText_text__hierarchy_1__3MBMS\",\"text__hierarchy_2\":\"ListText_text__hierarchy_2__1zPTN\",\"text__hierarchy_3\":\"ListText_text__hierarchy_3__46smZ\",\"text__card__hierarchy_1\":\"ListText_text__card__hierarchy_1__2JHoq\",\"text__card__hierarchy_2\":\"ListText_text__card__hierarchy_2__2CKBN\",\"text__card__hierarchy_3\":\"ListText_text__card__hierarchy_3__Kmezw\",\"document__toggle\":\"ListText_document__toggle__2iM0T\",\"document__toggle_icon\":\"ListText_document__toggle_icon__88xxq\",\"toggle__open\":\"ListText_toggle__open__1s8Cy\",\"toggle__closed\":\"ListText_toggle__closed__2VGPT\",\"icon__wrapper\":\"ListText_icon__wrapper__nUfWv\"};","import { IoAddOutline } from \"react-icons/io5\";\r\nimport styles from \"./AddButton.module.css\";\r\n\r\nconst AddButton = (props) => {\r\n  return (\r\n    <button className={styles.button} onClick={() => props.onClickHandler((previous) => !previous)}>\r\n      <IoAddOutline />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default AddButton;\r\n","import { useState } from \"react\";\r\nimport styles from \"./ListText.module.css\";\r\nimport { IoAddOutline } from \"react-icons/io5\";\r\nimport AddButton from \"./ui/buttons/AddButton\";\r\n\r\nfunction getTextStyles(textHierarchy) {\r\n  if (textHierarchy === 1) return styles[\"text__hierarchy_1\"];\r\n  if (textHierarchy === 2) return styles[\"text__hierarchy_2\"];\r\n  if (textHierarchy === 3) return styles[\"text__hierarchy_3\"];\r\n}\r\nfunction getTextCardStyles(textHierarchy) {\r\n  if (textHierarchy === 1) return styles[\"text__card__hierarchy_1\"];\r\n  if (textHierarchy === 2) return styles[\"text__card__hierarchy_2\"];\r\n  if (textHierarchy === 3) return styles[\"text__card__hierarchy_3\"];\r\n}\r\n\r\nfunction isLargeHeader(textHierarchy) {\r\n  if (textHierarchy < 4) return true;\r\n}\r\n\r\nconst ListText = (props) => {\r\n  const [showContent, setShowContent] = useState(props.expandable ? true : false);\r\n  // Guard to prevent rendering text with no length\r\n  if (props.text.trim().length === 0) return <></>;\r\n\r\n  return (\r\n    <div className={!isLargeHeader(props.textHierarchy) && styles.container}>\r\n      {!isLargeHeader(props.textHierarchy) && (\r\n        <div className={styles[\"document__toggle\"]}>\r\n          <div\r\n            className={styles[\"icon__wrapper\"]}\r\n            onClick={() => setShowContent((previous) => !previous)}\r\n          >\r\n            <svg\r\n              viewBox=\"0 0 100 100\"\r\n              className={`${styles[\"document__toggle_icon\"]} ${\r\n                showContent ? styles[\"toggle__open\"] : styles[\"toggle__closed\"]\r\n              }`}\r\n            >\r\n              <polygon points=\"5.9,88.2 50,11.8 94.1,88.2 \"></polygon>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div\r\n        className={\r\n          props.mindMapMode ? styles[\"text__wrapper_mindmap\"] : styles[\"text__wrapper_document\"]\r\n        }\r\n      >\r\n        <div\r\n          className={`${\r\n            props.mindMapMode ? styles[\"text__card_mindmap\"] : styles[\"text__card_document\"]\r\n          } ${getTextCardStyles(props.textHierarchy)}`}\r\n        >\r\n          <div\r\n            className={`${props.mindMapMode ? styles[\"text_mindmap\"] : styles[\"text_document\"]} ${\r\n              props.expandable && styles[\"text_expandable\"]\r\n            } ${!props.mindMapMode && getTextStyles(props.textHierarchy)}\r\n            `}\r\n          >\r\n            {props.text}\r\n            {isLargeHeader(props.textHierarchy) && <AddButton onClickHandler={setShowContent} />}\r\n          </div>\r\n        </div>\r\n        {showContent && <div style={{ display: \"flex\", flexFlow: \"column\" }}>{props.children}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListText;\r\n","const FileUploader = (props) => {\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"file\"\r\n        name=\"filename\"\r\n        onChange={(event) => props.submitHandler(event.target.files[0])}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploader;\r\n","import { useState } from \"react\";\r\nimport ListText from \"./components/ListText\";\r\nimport \"./App.css\";\r\nimport FileUploader from \"./components/FileUploader\";\r\n\r\nfunction extractTextNodes(currentElement) {\r\n  const childNodes = Array.from(currentElement.childNodes);\r\n  return childNodes.reduce((textString, node) => {\r\n    if (node.nodeType === Node.TEXT_NODE) {\r\n      return textString + \" \" + node.nodeValue;\r\n    } else return textString;\r\n  }, \"\");\r\n}\r\n\r\nconst App = () => {\r\n  // const [noteData, setNoteData] = useState(JSON.stringify(exampleObject2));\r\n  const [mindMapMode, setMindMapMode] = useState(false);\r\n  const [file, setFile] = useState();\r\n  const [fileData, setFileData] = useState();\r\n  const [fileJSON, setFileJSON] = useState();\r\n\r\n  // console.log(\"sample html\", sampleHTML)\r\n\r\n  // const updateNotes = (event) => {\r\n  //   event.preventDefault();\r\n  //   console.log(\"Notes updated!\");\r\n  //   setNoteData((previousObject) => {\r\n\r\n  //   })\r\n  // };\r\n\r\n  const htmlProcessor = () => {\r\n    const elementHierarchy = {\r\n      h1: 1,\r\n      h2: 2,\r\n      h3: 3,\r\n      p: {\r\n        \"\": 4,\r\n        \"72pt\": 5,\r\n        \"108pt\": 6,\r\n        \"144pt\": 7,\r\n        \"180pt\": 8,\r\n        \"216pt\": 9,\r\n        \"254pt\": 10,\r\n        \"290pt\": 11,\r\n      },\r\n    };\r\n\r\n    const uploaded = document.querySelector(\"#uploadedDocument\");\r\n    const elements = uploaded.querySelectorAll(\".WordSection1 > *\");\r\n    const elementArray = [...elements];\r\n\r\n    const output = elementArray.reduce(\r\n      (previous, current, index, array) => {\r\n        if (current.localName === \"p\") {\r\n          // try {\r\n          //   current.removeFirstChild(current.querySelector(\"span\"));\r\n          // } catch {}\r\n        }\r\n        if (current.localName === \"h1\") {\r\n          insertChildren(previous[1], {\r\n            text: current.textContent,\r\n            hierarchyLevel: 1,\r\n            children: [],\r\n          });\r\n          return [1, previous[1]];\r\n        }\r\n        if (index > 0 && array[index - 1].localName) {\r\n          if (\r\n            current.localName != \"p\" &&\r\n            current.localName != \"h1\" &&\r\n            current.localName != \"h2\" &&\r\n            current.localName != \"h3\"\r\n          ) {\r\n            return previous;\r\n          }\r\n          let currentHierarchy;\r\n          if (current.localName === \"p\") {\r\n            currentHierarchy = elementHierarchy[current.localName][current.style.marginLeft];\r\n          } else {\r\n            currentHierarchy = elementHierarchy[current.localName];\r\n          }\r\n          if (previous[0] === currentHierarchy) {\r\n            insertSibilingInLatestAndDeepestDepths(previous[1], {\r\n              text: extractTextNodes(current)\r\n                .replace(/[\\x00-\\x1F\\x7F-\\xFF]/g, \"\")\r\n                .replace(\"�\", \"\")\r\n                .replace(\"�\", \"\")\r\n                .replace(\"�\", \"\")\r\n                .replace(\"�\", \"\")\r\n                .replace(\"�\", \"\"),\r\n              hierarchyLevel: currentHierarchy,\r\n              children: [],\r\n            });\r\n          } else if (previous[0] > currentHierarchy) {\r\n            insertSibilingAtSpecifiedDepth(\r\n              previous[1],\r\n              {\r\n                text: extractTextNodes(current)\r\n                  .replace(/[\\x00-\\x1F\\x7F-\\xFF]/g, \"\")\r\n                  .replace(\"�\", \"\")\r\n                  .replace(\"�\", \"\")\r\n                  .replace(\"�\", \"\")\r\n                  .replace(\"�\", \"\")\r\n                  .replace(\"�\", \"\"),\r\n                hierarchyLevel: currentHierarchy,\r\n                children: [],\r\n              },\r\n              currentHierarchy\r\n            );\r\n          } else if (previous[0] < currentHierarchy) {\r\n            insertChildInLatestAndDeepestDepths(previous[1], {\r\n              text: extractTextNodes(current)\r\n                .replace(/[\\x00-\\x1F\\x7F-\\xFF]/g, \"\")\r\n                .replace(\"�\", \"\")\r\n                .replace(\"�\", \"\")\r\n                .replace(\"�\", \"\")\r\n                .replace(\"�\", \"\")\r\n                .replace(\"�\", \"\"),\r\n              hierarchyLevel: currentHierarchy,\r\n              children: [],\r\n            });\r\n          }\r\n          return [currentHierarchy, previous[1]];\r\n        }\r\n        return previous;\r\n      },\r\n      [-1, { text: \"Root\", children: [] }]\r\n    );\r\n\r\n    function insertSibilingInLatestAndDeepestDepths(object, data) {\r\n      if (object.children[object.children.length - 1].children.length === 0) {\r\n        return insertChildren(object, data);\r\n      } else {\r\n        return insertSibilingInLatestAndDeepestDepths(\r\n          object.children[object.children.length - 1],\r\n          data\r\n        );\r\n      }\r\n    }\r\n\r\n    function insertChildInLatestAndDeepestDepths(object, data) {\r\n      if (object.children.length === 0) {\r\n        return insertChildren(object, data);\r\n      } else {\r\n        return insertChildInLatestAndDeepestDepths(\r\n          object.children[object.children.length - 1],\r\n          data\r\n        );\r\n      }\r\n    }\r\n    function insertChildAtSpecifiedDepth(object, data, depth) {\r\n      if (depth === 0) {\r\n        return insertChildren(object, data);\r\n      } else {\r\n        return insertChildAtSpecifiedDepth(\r\n          object.children[object.children.length - 1],\r\n          data,\r\n          depth - 1\r\n        );\r\n      }\r\n    }\r\n    function insertSibilingAtSpecifiedDepth(object, data, depth) {\r\n      if (depth === 1) {\r\n        return insertChildren(object, data);\r\n      } else {\r\n        return insertSibilingAtSpecifiedDepth(\r\n          object.children[object.children.length - 1],\r\n          data,\r\n          depth - 1\r\n        );\r\n      }\r\n    }\r\n\r\n    // Access the last correct node and append another chlid\r\n    function insertChildren(object, data) {\r\n      object.children.push(data);\r\n      return object;\r\n    }\r\n\r\n    setFileJSON(output[1]);\r\n  };\r\n\r\n  const processFile = () => {\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = function (e) {\r\n      setFileData(e.target.result);\r\n    };\r\n    fileReader.readAsText(file);\r\n  };\r\n\r\n  const objectExtractor = (object, mindMapMode) => {\r\n    if (object?.children?.length === 0 || !object?.children?.length)\r\n      return (\r\n        <ListText\r\n          mindMapMode={mindMapMode}\r\n          expandable={false}\r\n          text={object.text}\r\n          textHierarchy={object.hierarchyLevel}\r\n        />\r\n      );\r\n    return (\r\n      <ListText\r\n        mindMapMode={mindMapMode}\r\n        expandable={true}\r\n        text={object.text}\r\n        textHierarchy={object.hierarchyLevel}\r\n      >\r\n        {object.children.map((child) => {\r\n          return objectExtractor(child, mindMapMode);\r\n        })}\r\n      </ListText>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Notes</h3>\r\n      <FileUploader submitHandler={setFile} />\r\n      <button onClick={htmlProcessor}>Click to process</button>\r\n      <button onClick={() => setMindMapMode((previous) => !previous)}>Toggle Mindmap Mode</button>\r\n      {file && processFile()}\r\n      <div>{file && file.name}</div>\r\n      {fileJSON && objectExtractor(fileJSON, mindMapMode)}\r\n      {/* <form onSubmit={updateNotes}>\r\n        <input placeholder=\"write your notes here\"></input>\r\n        <input placeholder=\"level\"></input>\r\n      </form> */}\r\n      {/* {sampleHTML} */}\r\n      <div\r\n        id=\"uploadedDocument\"\r\n        style={{ display: \"none\" }}\r\n        dangerouslySetInnerHTML={{ __html: fileData }}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"AddButton_button__2O-ji\"};"],"sourceRoot":""}